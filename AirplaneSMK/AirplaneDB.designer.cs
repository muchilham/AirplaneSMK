#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AirplaneSMK
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AriplaneDB")]
	public partial class AirplaneDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_BookingDetail(tbl_BookingDetail instance);
    partial void Updatetbl_BookingDetail(tbl_BookingDetail instance);
    partial void Deletetbl_BookingDetail(tbl_BookingDetail instance);
    partial void Inserttbl_ScheduleDetail(tbl_ScheduleDetail instance);
    partial void Updatetbl_ScheduleDetail(tbl_ScheduleDetail instance);
    partial void Deletetbl_ScheduleDetail(tbl_ScheduleDetail instance);
    partial void Inserttbl_BookingMaster(tbl_BookingMaster instance);
    partial void Updatetbl_BookingMaster(tbl_BookingMaster instance);
    partial void Deletetbl_BookingMaster(tbl_BookingMaster instance);
    partial void Inserttbl_Class(tbl_Class instance);
    partial void Updatetbl_Class(tbl_Class instance);
    partial void Deletetbl_Class(tbl_Class instance);
    partial void Inserttbl_Consumption(tbl_Consumption instance);
    partial void Updatetbl_Consumption(tbl_Consumption instance);
    partial void Deletetbl_Consumption(tbl_Consumption instance);
    partial void Inserttbl_Customer(tbl_Customer instance);
    partial void Updatetbl_Customer(tbl_Customer instance);
    partial void Deletetbl_Customer(tbl_Customer instance);
    partial void Inserttbl_Place(tbl_Place instance);
    partial void Updatetbl_Place(tbl_Place instance);
    partial void Deletetbl_Place(tbl_Place instance);
    partial void Inserttbl_Plane(tbl_Plane instance);
    partial void Updatetbl_Plane(tbl_Plane instance);
    partial void Deletetbl_Plane(tbl_Plane instance);
    partial void Inserttbl_Route(tbl_Route instance);
    partial void Updatetbl_Route(tbl_Route instance);
    partial void Deletetbl_Route(tbl_Route instance);
    partial void Inserttbl_Schedule(tbl_Schedule instance);
    partial void Updatetbl_Schedule(tbl_Schedule instance);
    partial void Deletetbl_Schedule(tbl_Schedule instance);
    #endregion
		
		public AirplaneDBDataContext() : 
				base(global::AirplaneSMK.Properties.Settings.Default.AriplaneDBConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public AirplaneDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AirplaneDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AirplaneDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AirplaneDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_BookingDetail> tbl_BookingDetails
		{
			get
			{
				return this.GetTable<tbl_BookingDetail>();
			}
		}
		
		public System.Data.Linq.Table<tbl_ScheduleDetail> tbl_ScheduleDetails
		{
			get
			{
				return this.GetTable<tbl_ScheduleDetail>();
			}
		}
		
		public System.Data.Linq.Table<tbl_BookingMaster> tbl_BookingMasters
		{
			get
			{
				return this.GetTable<tbl_BookingMaster>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Class> tbl_Classes
		{
			get
			{
				return this.GetTable<tbl_Class>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Consumption> tbl_Consumptions
		{
			get
			{
				return this.GetTable<tbl_Consumption>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Customer> tbl_Customers
		{
			get
			{
				return this.GetTable<tbl_Customer>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Place> tbl_Places
		{
			get
			{
				return this.GetTable<tbl_Place>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Plane> tbl_Planes
		{
			get
			{
				return this.GetTable<tbl_Plane>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Route> tbl_Routes
		{
			get
			{
				return this.GetTable<tbl_Route>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Schedule> tbl_Schedules
		{
			get
			{
				return this.GetTable<tbl_Schedule>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_BookingDetail")]
	public partial class tbl_BookingDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_booking;
		
		private int _id_customer;
		
		private string _no_seat;
		
		private int _id_consumption;
		
		private int _quantity;
		
		private EntityRef<tbl_BookingMaster> _tbl_BookingMaster;
		
		private EntityRef<tbl_Consumption> _tbl_Consumption;
		
		private EntityRef<tbl_Customer> _tbl_Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_bookingChanging(int value);
    partial void Onid_bookingChanged();
    partial void Onid_customerChanging(int value);
    partial void Onid_customerChanged();
    partial void Onno_seatChanging(string value);
    partial void Onno_seatChanged();
    partial void Onid_consumptionChanging(int value);
    partial void Onid_consumptionChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    #endregion
		
		public tbl_BookingDetail()
		{
			this._tbl_BookingMaster = default(EntityRef<tbl_BookingMaster>);
			this._tbl_Consumption = default(EntityRef<tbl_Consumption>);
			this._tbl_Customer = default(EntityRef<tbl_Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_booking", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_booking
		{
			get
			{
				return this._id_booking;
			}
			set
			{
				if ((this._id_booking != value))
				{
					if (this._tbl_BookingMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_bookingChanging(value);
					this.SendPropertyChanging();
					this._id_booking = value;
					this.SendPropertyChanged("id_booking");
					this.Onid_bookingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_customer", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_customer
		{
			get
			{
				return this._id_customer;
			}
			set
			{
				if ((this._id_customer != value))
				{
					if (this._tbl_Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_customerChanging(value);
					this.SendPropertyChanging();
					this._id_customer = value;
					this.SendPropertyChanged("id_customer");
					this.Onid_customerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_no_seat", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string no_seat
		{
			get
			{
				return this._no_seat;
			}
			set
			{
				if ((this._no_seat != value))
				{
					this.Onno_seatChanging(value);
					this.SendPropertyChanging();
					this._no_seat = value;
					this.SendPropertyChanged("no_seat");
					this.Onno_seatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_consumption", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_consumption
		{
			get
			{
				return this._id_consumption;
			}
			set
			{
				if ((this._id_consumption != value))
				{
					if (this._tbl_Consumption.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_consumptionChanging(value);
					this.SendPropertyChanging();
					this._id_consumption = value;
					this.SendPropertyChanged("id_consumption");
					this.Onid_consumptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_BookingMaster_tbl_BookingDetail", Storage="_tbl_BookingMaster", ThisKey="id_booking", OtherKey="id_booking", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tbl_BookingMaster tbl_BookingMaster
		{
			get
			{
				return this._tbl_BookingMaster.Entity;
			}
			set
			{
				tbl_BookingMaster previousValue = this._tbl_BookingMaster.Entity;
				if (((previousValue != value) 
							|| (this._tbl_BookingMaster.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_BookingMaster.Entity = null;
						previousValue.tbl_BookingDetails.Remove(this);
					}
					this._tbl_BookingMaster.Entity = value;
					if ((value != null))
					{
						value.tbl_BookingDetails.Add(this);
						this._id_booking = value.id_booking;
					}
					else
					{
						this._id_booking = default(int);
					}
					this.SendPropertyChanged("tbl_BookingMaster");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Consumption_tbl_BookingDetail", Storage="_tbl_Consumption", ThisKey="id_consumption", OtherKey="id_consumption", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tbl_Consumption tbl_Consumption
		{
			get
			{
				return this._tbl_Consumption.Entity;
			}
			set
			{
				tbl_Consumption previousValue = this._tbl_Consumption.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Consumption.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Consumption.Entity = null;
						previousValue.tbl_BookingDetails.Remove(this);
					}
					this._tbl_Consumption.Entity = value;
					if ((value != null))
					{
						value.tbl_BookingDetails.Add(this);
						this._id_consumption = value.id_consumption;
					}
					else
					{
						this._id_consumption = default(int);
					}
					this.SendPropertyChanged("tbl_Consumption");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Customer_tbl_BookingDetail", Storage="_tbl_Customer", ThisKey="id_customer", OtherKey="id_customer", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tbl_Customer tbl_Customer
		{
			get
			{
				return this._tbl_Customer.Entity;
			}
			set
			{
				tbl_Customer previousValue = this._tbl_Customer.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Customer.Entity = null;
						previousValue.tbl_BookingDetails.Remove(this);
					}
					this._tbl_Customer.Entity = value;
					if ((value != null))
					{
						value.tbl_BookingDetails.Add(this);
						this._id_customer = value.id_customer;
					}
					else
					{
						this._id_customer = default(int);
					}
					this.SendPropertyChanged("tbl_Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_ScheduleDetail")]
	public partial class tbl_ScheduleDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_schedule;
		
		private int _id_route;
		
		private EntityRef<tbl_Route> _tbl_Route;
		
		private EntityRef<tbl_Schedule> _tbl_Schedule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_scheduleChanging(string value);
    partial void Onid_scheduleChanged();
    partial void Onid_routeChanging(int value);
    partial void Onid_routeChanged();
    #endregion
		
		public tbl_ScheduleDetail()
		{
			this._tbl_Route = default(EntityRef<tbl_Route>);
			this._tbl_Schedule = default(EntityRef<tbl_Schedule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_schedule", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_schedule
		{
			get
			{
				return this._id_schedule;
			}
			set
			{
				if ((this._id_schedule != value))
				{
					if (this._tbl_Schedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_scheduleChanging(value);
					this.SendPropertyChanging();
					this._id_schedule = value;
					this.SendPropertyChanged("id_schedule");
					this.Onid_scheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_route", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_route
		{
			get
			{
				return this._id_route;
			}
			set
			{
				if ((this._id_route != value))
				{
					if (this._tbl_Route.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_routeChanging(value);
					this.SendPropertyChanging();
					this._id_route = value;
					this.SendPropertyChanged("id_route");
					this.Onid_routeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Route_tbl_ScheduleDetail", Storage="_tbl_Route", ThisKey="id_route", OtherKey="id_route", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tbl_Route tbl_Route
		{
			get
			{
				return this._tbl_Route.Entity;
			}
			set
			{
				tbl_Route previousValue = this._tbl_Route.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Route.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Route.Entity = null;
						previousValue.tbl_ScheduleDetails.Remove(this);
					}
					this._tbl_Route.Entity = value;
					if ((value != null))
					{
						value.tbl_ScheduleDetails.Add(this);
						this._id_route = value.id_route;
					}
					else
					{
						this._id_route = default(int);
					}
					this.SendPropertyChanged("tbl_Route");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Schedule_tbl_ScheduleDetail", Storage="_tbl_Schedule", ThisKey="id_schedule", OtherKey="id_schedule", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tbl_Schedule tbl_Schedule
		{
			get
			{
				return this._tbl_Schedule.Entity;
			}
			set
			{
				tbl_Schedule previousValue = this._tbl_Schedule.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Schedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Schedule.Entity = null;
						previousValue.tbl_ScheduleDetails.Remove(this);
					}
					this._tbl_Schedule.Entity = value;
					if ((value != null))
					{
						value.tbl_ScheduleDetails.Add(this);
						this._id_schedule = value.id_schedule;
					}
					else
					{
						this._id_schedule = default(string);
					}
					this.SendPropertyChanged("tbl_Schedule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_BookingMaster")]
	public partial class tbl_BookingMaster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_booking;
		
		private System.DateTime _date_booking;
		
		private string _id_schedule;
		
		private double _total_price;
		
		private EntitySet<tbl_BookingDetail> _tbl_BookingDetails;
		
		private EntityRef<tbl_Schedule> _tbl_Schedule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_bookingChanging(int value);
    partial void Onid_bookingChanged();
    partial void Ondate_bookingChanging(System.DateTime value);
    partial void Ondate_bookingChanged();
    partial void Onid_scheduleChanging(string value);
    partial void Onid_scheduleChanged();
    partial void Ontotal_priceChanging(double value);
    partial void Ontotal_priceChanged();
    #endregion
		
		public tbl_BookingMaster()
		{
			this._tbl_BookingDetails = new EntitySet<tbl_BookingDetail>(new Action<tbl_BookingDetail>(this.attach_tbl_BookingDetails), new Action<tbl_BookingDetail>(this.detach_tbl_BookingDetails));
			this._tbl_Schedule = default(EntityRef<tbl_Schedule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_booking", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_booking
		{
			get
			{
				return this._id_booking;
			}
			set
			{
				if ((this._id_booking != value))
				{
					this.Onid_bookingChanging(value);
					this.SendPropertyChanging();
					this._id_booking = value;
					this.SendPropertyChanged("id_booking");
					this.Onid_bookingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_booking", DbType="DateTime NOT NULL")]
		public System.DateTime date_booking
		{
			get
			{
				return this._date_booking;
			}
			set
			{
				if ((this._date_booking != value))
				{
					this.Ondate_bookingChanging(value);
					this.SendPropertyChanging();
					this._date_booking = value;
					this.SendPropertyChanged("date_booking");
					this.Ondate_bookingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_schedule", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string id_schedule
		{
			get
			{
				return this._id_schedule;
			}
			set
			{
				if ((this._id_schedule != value))
				{
					if (this._tbl_Schedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_scheduleChanging(value);
					this.SendPropertyChanging();
					this._id_schedule = value;
					this.SendPropertyChanged("id_schedule");
					this.Onid_scheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_price", DbType="Float NOT NULL")]
		public double total_price
		{
			get
			{
				return this._total_price;
			}
			set
			{
				if ((this._total_price != value))
				{
					this.Ontotal_priceChanging(value);
					this.SendPropertyChanging();
					this._total_price = value;
					this.SendPropertyChanged("total_price");
					this.Ontotal_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_BookingMaster_tbl_BookingDetail", Storage="_tbl_BookingDetails", ThisKey="id_booking", OtherKey="id_booking")]
		public EntitySet<tbl_BookingDetail> tbl_BookingDetails
		{
			get
			{
				return this._tbl_BookingDetails;
			}
			set
			{
				this._tbl_BookingDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Schedule_tbl_BookingMaster", Storage="_tbl_Schedule", ThisKey="id_schedule", OtherKey="id_schedule", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tbl_Schedule tbl_Schedule
		{
			get
			{
				return this._tbl_Schedule.Entity;
			}
			set
			{
				tbl_Schedule previousValue = this._tbl_Schedule.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Schedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Schedule.Entity = null;
						previousValue.tbl_BookingMasters.Remove(this);
					}
					this._tbl_Schedule.Entity = value;
					if ((value != null))
					{
						value.tbl_BookingMasters.Add(this);
						this._id_schedule = value.id_schedule;
					}
					else
					{
						this._id_schedule = default(string);
					}
					this.SendPropertyChanged("tbl_Schedule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_BookingDetails(tbl_BookingDetail entity)
		{
			this.SendPropertyChanging();
			entity.tbl_BookingMaster = this;
		}
		
		private void detach_tbl_BookingDetails(tbl_BookingDetail entity)
		{
			this.SendPropertyChanging();
			entity.tbl_BookingMaster = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Class")]
	public partial class tbl_Class : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_class;
		
		private string _name_class;
		
		private double _price_class;
		
		private EntitySet<tbl_Plane> _tbl_Planes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_classChanging(int value);
    partial void Onid_classChanged();
    partial void Onname_classChanging(string value);
    partial void Onname_classChanged();
    partial void Onprice_classChanging(double value);
    partial void Onprice_classChanged();
    #endregion
		
		public tbl_Class()
		{
			this._tbl_Planes = new EntitySet<tbl_Plane>(new Action<tbl_Plane>(this.attach_tbl_Planes), new Action<tbl_Plane>(this.detach_tbl_Planes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_class", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_class
		{
			get
			{
				return this._id_class;
			}
			set
			{
				if ((this._id_class != value))
				{
					this.Onid_classChanging(value);
					this.SendPropertyChanging();
					this._id_class = value;
					this.SendPropertyChanged("id_class");
					this.Onid_classChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_class", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name_class
		{
			get
			{
				return this._name_class;
			}
			set
			{
				if ((this._name_class != value))
				{
					this.Onname_classChanging(value);
					this.SendPropertyChanging();
					this._name_class = value;
					this.SendPropertyChanged("name_class");
					this.Onname_classChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price_class", DbType="Float NOT NULL")]
		public double price_class
		{
			get
			{
				return this._price_class;
			}
			set
			{
				if ((this._price_class != value))
				{
					this.Onprice_classChanging(value);
					this.SendPropertyChanging();
					this._price_class = value;
					this.SendPropertyChanged("price_class");
					this.Onprice_classChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Class_tbl_Plane", Storage="_tbl_Planes", ThisKey="id_class", OtherKey="id_class")]
		public EntitySet<tbl_Plane> tbl_Planes
		{
			get
			{
				return this._tbl_Planes;
			}
			set
			{
				this._tbl_Planes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Planes(tbl_Plane entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Class = this;
		}
		
		private void detach_tbl_Planes(tbl_Plane entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Class = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Consumption")]
	public partial class tbl_Consumption : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_consumption;
		
		private string _name_consumption;
		
		private double _price_consumption;
		
		private EntitySet<tbl_BookingDetail> _tbl_BookingDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_consumptionChanging(int value);
    partial void Onid_consumptionChanged();
    partial void Onname_consumptionChanging(string value);
    partial void Onname_consumptionChanged();
    partial void Onprice_consumptionChanging(double value);
    partial void Onprice_consumptionChanged();
    #endregion
		
		public tbl_Consumption()
		{
			this._tbl_BookingDetails = new EntitySet<tbl_BookingDetail>(new Action<tbl_BookingDetail>(this.attach_tbl_BookingDetails), new Action<tbl_BookingDetail>(this.detach_tbl_BookingDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_consumption", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_consumption
		{
			get
			{
				return this._id_consumption;
			}
			set
			{
				if ((this._id_consumption != value))
				{
					this.Onid_consumptionChanging(value);
					this.SendPropertyChanging();
					this._id_consumption = value;
					this.SendPropertyChanged("id_consumption");
					this.Onid_consumptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_consumption", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name_consumption
		{
			get
			{
				return this._name_consumption;
			}
			set
			{
				if ((this._name_consumption != value))
				{
					this.Onname_consumptionChanging(value);
					this.SendPropertyChanging();
					this._name_consumption = value;
					this.SendPropertyChanged("name_consumption");
					this.Onname_consumptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price_consumption", DbType="Float NOT NULL")]
		public double price_consumption
		{
			get
			{
				return this._price_consumption;
			}
			set
			{
				if ((this._price_consumption != value))
				{
					this.Onprice_consumptionChanging(value);
					this.SendPropertyChanging();
					this._price_consumption = value;
					this.SendPropertyChanged("price_consumption");
					this.Onprice_consumptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Consumption_tbl_BookingDetail", Storage="_tbl_BookingDetails", ThisKey="id_consumption", OtherKey="id_consumption")]
		public EntitySet<tbl_BookingDetail> tbl_BookingDetails
		{
			get
			{
				return this._tbl_BookingDetails;
			}
			set
			{
				this._tbl_BookingDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_BookingDetails(tbl_BookingDetail entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Consumption = this;
		}
		
		private void detach_tbl_BookingDetails(tbl_BookingDetail entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Consumption = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Customer")]
	public partial class tbl_Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_customer;
		
		private string _name_customer;
		
		private string _address_customer;
		
		private string _email_customer;
		
		private string _phonenumber_customer;
		
		private EntitySet<tbl_BookingDetail> _tbl_BookingDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_customerChanging(int value);
    partial void Onid_customerChanged();
    partial void Onname_customerChanging(string value);
    partial void Onname_customerChanged();
    partial void Onaddress_customerChanging(string value);
    partial void Onaddress_customerChanged();
    partial void Onemail_customerChanging(string value);
    partial void Onemail_customerChanged();
    partial void Onphonenumber_customerChanging(string value);
    partial void Onphonenumber_customerChanged();
    #endregion
		
		public tbl_Customer()
		{
			this._tbl_BookingDetails = new EntitySet<tbl_BookingDetail>(new Action<tbl_BookingDetail>(this.attach_tbl_BookingDetails), new Action<tbl_BookingDetail>(this.detach_tbl_BookingDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_customer", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_customer
		{
			get
			{
				return this._id_customer;
			}
			set
			{
				if ((this._id_customer != value))
				{
					this.Onid_customerChanging(value);
					this.SendPropertyChanging();
					this._id_customer = value;
					this.SendPropertyChanged("id_customer");
					this.Onid_customerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_customer", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name_customer
		{
			get
			{
				return this._name_customer;
			}
			set
			{
				if ((this._name_customer != value))
				{
					this.Onname_customerChanging(value);
					this.SendPropertyChanging();
					this._name_customer = value;
					this.SendPropertyChanged("name_customer");
					this.Onname_customerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address_customer", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string address_customer
		{
			get
			{
				return this._address_customer;
			}
			set
			{
				if ((this._address_customer != value))
				{
					this.Onaddress_customerChanging(value);
					this.SendPropertyChanging();
					this._address_customer = value;
					this.SendPropertyChanged("address_customer");
					this.Onaddress_customerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email_customer", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string email_customer
		{
			get
			{
				return this._email_customer;
			}
			set
			{
				if ((this._email_customer != value))
				{
					this.Onemail_customerChanging(value);
					this.SendPropertyChanging();
					this._email_customer = value;
					this.SendPropertyChanged("email_customer");
					this.Onemail_customerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phonenumber_customer", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string phonenumber_customer
		{
			get
			{
				return this._phonenumber_customer;
			}
			set
			{
				if ((this._phonenumber_customer != value))
				{
					this.Onphonenumber_customerChanging(value);
					this.SendPropertyChanging();
					this._phonenumber_customer = value;
					this.SendPropertyChanged("phonenumber_customer");
					this.Onphonenumber_customerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Customer_tbl_BookingDetail", Storage="_tbl_BookingDetails", ThisKey="id_customer", OtherKey="id_customer")]
		public EntitySet<tbl_BookingDetail> tbl_BookingDetails
		{
			get
			{
				return this._tbl_BookingDetails;
			}
			set
			{
				this._tbl_BookingDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_BookingDetails(tbl_BookingDetail entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Customer = this;
		}
		
		private void detach_tbl_BookingDetails(tbl_BookingDetail entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Place")]
	public partial class tbl_Place : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_place;
		
		private string _name_place;
		
		private EntitySet<tbl_Route> _tbl_Routes;
		
		private EntitySet<tbl_Route> _tbl_Routes1;
		
		private EntitySet<tbl_Schedule> _tbl_Schedules;
		
		private EntitySet<tbl_Schedule> _tbl_Schedules1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_placeChanging(int value);
    partial void Onid_placeChanged();
    partial void Onname_placeChanging(string value);
    partial void Onname_placeChanged();
    #endregion
		
		public tbl_Place()
		{
			this._tbl_Routes = new EntitySet<tbl_Route>(new Action<tbl_Route>(this.attach_tbl_Routes), new Action<tbl_Route>(this.detach_tbl_Routes));
			this._tbl_Routes1 = new EntitySet<tbl_Route>(new Action<tbl_Route>(this.attach_tbl_Routes1), new Action<tbl_Route>(this.detach_tbl_Routes1));
			this._tbl_Schedules = new EntitySet<tbl_Schedule>(new Action<tbl_Schedule>(this.attach_tbl_Schedules), new Action<tbl_Schedule>(this.detach_tbl_Schedules));
			this._tbl_Schedules1 = new EntitySet<tbl_Schedule>(new Action<tbl_Schedule>(this.attach_tbl_Schedules1), new Action<tbl_Schedule>(this.detach_tbl_Schedules1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_place", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_place
		{
			get
			{
				return this._id_place;
			}
			set
			{
				if ((this._id_place != value))
				{
					this.Onid_placeChanging(value);
					this.SendPropertyChanging();
					this._id_place = value;
					this.SendPropertyChanged("id_place");
					this.Onid_placeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_place", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name_place
		{
			get
			{
				return this._name_place;
			}
			set
			{
				if ((this._name_place != value))
				{
					this.Onname_placeChanging(value);
					this.SendPropertyChanging();
					this._name_place = value;
					this.SendPropertyChanged("name_place");
					this.Onname_placeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Place_tbl_Route", Storage="_tbl_Routes", ThisKey="id_place", OtherKey="departure_place")]
		public EntitySet<tbl_Route> tbl_Routes
		{
			get
			{
				return this._tbl_Routes;
			}
			set
			{
				this._tbl_Routes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Place_tbl_Route1", Storage="_tbl_Routes1", ThisKey="id_place", OtherKey="arrival_place")]
		public EntitySet<tbl_Route> tbl_Routes1
		{
			get
			{
				return this._tbl_Routes1;
			}
			set
			{
				this._tbl_Routes1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Place_tbl_Schedule", Storage="_tbl_Schedules", ThisKey="id_place", OtherKey="departure_origin")]
		public EntitySet<tbl_Schedule> tbl_Schedules
		{
			get
			{
				return this._tbl_Schedules;
			}
			set
			{
				this._tbl_Schedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Place_tbl_Schedule1", Storage="_tbl_Schedules1", ThisKey="id_place", OtherKey="arrival_origin")]
		public EntitySet<tbl_Schedule> tbl_Schedules1
		{
			get
			{
				return this._tbl_Schedules1;
			}
			set
			{
				this._tbl_Schedules1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Routes(tbl_Route entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Place = this;
		}
		
		private void detach_tbl_Routes(tbl_Route entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Place = null;
		}
		
		private void attach_tbl_Routes1(tbl_Route entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Place1 = this;
		}
		
		private void detach_tbl_Routes1(tbl_Route entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Place1 = null;
		}
		
		private void attach_tbl_Schedules(tbl_Schedule entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Place = this;
		}
		
		private void detach_tbl_Schedules(tbl_Schedule entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Place = null;
		}
		
		private void attach_tbl_Schedules1(tbl_Schedule entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Place1 = this;
		}
		
		private void detach_tbl_Schedules1(tbl_Schedule entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Place1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Plane")]
	public partial class tbl_Plane : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_plane;
		
		private string _name_plane;
		
		private int _seat_plane;
		
		private System.Nullable<int> _id_class;
		
		private double _price_plane;
		
		private EntitySet<tbl_Schedule> _tbl_Schedules;
		
		private EntityRef<tbl_Class> _tbl_Class;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_planeChanging(int value);
    partial void Onid_planeChanged();
    partial void Onname_planeChanging(string value);
    partial void Onname_planeChanged();
    partial void Onseat_planeChanging(int value);
    partial void Onseat_planeChanged();
    partial void Onid_classChanging(System.Nullable<int> value);
    partial void Onid_classChanged();
    partial void Onprice_planeChanging(double value);
    partial void Onprice_planeChanged();
    #endregion
		
		public tbl_Plane()
		{
			this._tbl_Schedules = new EntitySet<tbl_Schedule>(new Action<tbl_Schedule>(this.attach_tbl_Schedules), new Action<tbl_Schedule>(this.detach_tbl_Schedules));
			this._tbl_Class = default(EntityRef<tbl_Class>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_plane", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_plane
		{
			get
			{
				return this._id_plane;
			}
			set
			{
				if ((this._id_plane != value))
				{
					this.Onid_planeChanging(value);
					this.SendPropertyChanging();
					this._id_plane = value;
					this.SendPropertyChanged("id_plane");
					this.Onid_planeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_plane", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name_plane
		{
			get
			{
				return this._name_plane;
			}
			set
			{
				if ((this._name_plane != value))
				{
					this.Onname_planeChanging(value);
					this.SendPropertyChanging();
					this._name_plane = value;
					this.SendPropertyChanged("name_plane");
					this.Onname_planeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seat_plane", DbType="Int NOT NULL")]
		public int seat_plane
		{
			get
			{
				return this._seat_plane;
			}
			set
			{
				if ((this._seat_plane != value))
				{
					this.Onseat_planeChanging(value);
					this.SendPropertyChanging();
					this._seat_plane = value;
					this.SendPropertyChanged("seat_plane");
					this.Onseat_planeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_class", DbType="Int")]
		public System.Nullable<int> id_class
		{
			get
			{
				return this._id_class;
			}
			set
			{
				if ((this._id_class != value))
				{
					if (this._tbl_Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_classChanging(value);
					this.SendPropertyChanging();
					this._id_class = value;
					this.SendPropertyChanged("id_class");
					this.Onid_classChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price_plane", DbType="Float NOT NULL")]
		public double price_plane
		{
			get
			{
				return this._price_plane;
			}
			set
			{
				if ((this._price_plane != value))
				{
					this.Onprice_planeChanging(value);
					this.SendPropertyChanging();
					this._price_plane = value;
					this.SendPropertyChanged("price_plane");
					this.Onprice_planeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Plane_tbl_Schedule", Storage="_tbl_Schedules", ThisKey="id_plane", OtherKey="id_plane")]
		public EntitySet<tbl_Schedule> tbl_Schedules
		{
			get
			{
				return this._tbl_Schedules;
			}
			set
			{
				this._tbl_Schedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Class_tbl_Plane", Storage="_tbl_Class", ThisKey="id_class", OtherKey="id_class", IsForeignKey=true, DeleteRule="SET NULL")]
		public tbl_Class tbl_Class
		{
			get
			{
				return this._tbl_Class.Entity;
			}
			set
			{
				tbl_Class previousValue = this._tbl_Class.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Class.Entity = null;
						previousValue.tbl_Planes.Remove(this);
					}
					this._tbl_Class.Entity = value;
					if ((value != null))
					{
						value.tbl_Planes.Add(this);
						this._id_class = value.id_class;
					}
					else
					{
						this._id_class = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Class");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Schedules(tbl_Schedule entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Plane = this;
		}
		
		private void detach_tbl_Schedules(tbl_Schedule entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Plane = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Route")]
	public partial class tbl_Route : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_route;
		
		private int _departure_place;
		
		private int _arrival_place;
		
		private EntitySet<tbl_ScheduleDetail> _tbl_ScheduleDetails;
		
		private EntityRef<tbl_Place> _tbl_Place;
		
		private EntityRef<tbl_Place> _tbl_Place1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_routeChanging(int value);
    partial void Onid_routeChanged();
    partial void Ondeparture_placeChanging(int value);
    partial void Ondeparture_placeChanged();
    partial void Onarrival_placeChanging(int value);
    partial void Onarrival_placeChanged();
    #endregion
		
		public tbl_Route()
		{
			this._tbl_ScheduleDetails = new EntitySet<tbl_ScheduleDetail>(new Action<tbl_ScheduleDetail>(this.attach_tbl_ScheduleDetails), new Action<tbl_ScheduleDetail>(this.detach_tbl_ScheduleDetails));
			this._tbl_Place = default(EntityRef<tbl_Place>);
			this._tbl_Place1 = default(EntityRef<tbl_Place>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_route", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_route
		{
			get
			{
				return this._id_route;
			}
			set
			{
				if ((this._id_route != value))
				{
					this.Onid_routeChanging(value);
					this.SendPropertyChanging();
					this._id_route = value;
					this.SendPropertyChanged("id_route");
					this.Onid_routeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_departure_place", DbType="Int NOT NULL")]
		public int departure_place
		{
			get
			{
				return this._departure_place;
			}
			set
			{
				if ((this._departure_place != value))
				{
					if (this._tbl_Place.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondeparture_placeChanging(value);
					this.SendPropertyChanging();
					this._departure_place = value;
					this.SendPropertyChanged("departure_place");
					this.Ondeparture_placeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_arrival_place", DbType="Int NOT NULL")]
		public int arrival_place
		{
			get
			{
				return this._arrival_place;
			}
			set
			{
				if ((this._arrival_place != value))
				{
					if (this._tbl_Place1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onarrival_placeChanging(value);
					this.SendPropertyChanging();
					this._arrival_place = value;
					this.SendPropertyChanged("arrival_place");
					this.Onarrival_placeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Route_tbl_ScheduleDetail", Storage="_tbl_ScheduleDetails", ThisKey="id_route", OtherKey="id_route")]
		public EntitySet<tbl_ScheduleDetail> tbl_ScheduleDetails
		{
			get
			{
				return this._tbl_ScheduleDetails;
			}
			set
			{
				this._tbl_ScheduleDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Place_tbl_Route", Storage="_tbl_Place", ThisKey="departure_place", OtherKey="id_place", IsForeignKey=true)]
		public tbl_Place tbl_Place
		{
			get
			{
				return this._tbl_Place.Entity;
			}
			set
			{
				tbl_Place previousValue = this._tbl_Place.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Place.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Place.Entity = null;
						previousValue.tbl_Routes.Remove(this);
					}
					this._tbl_Place.Entity = value;
					if ((value != null))
					{
						value.tbl_Routes.Add(this);
						this._departure_place = value.id_place;
					}
					else
					{
						this._departure_place = default(int);
					}
					this.SendPropertyChanged("tbl_Place");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Place_tbl_Route1", Storage="_tbl_Place1", ThisKey="arrival_place", OtherKey="id_place", IsForeignKey=true)]
		public tbl_Place tbl_Place1
		{
			get
			{
				return this._tbl_Place1.Entity;
			}
			set
			{
				tbl_Place previousValue = this._tbl_Place1.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Place1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Place1.Entity = null;
						previousValue.tbl_Routes1.Remove(this);
					}
					this._tbl_Place1.Entity = value;
					if ((value != null))
					{
						value.tbl_Routes1.Add(this);
						this._arrival_place = value.id_place;
					}
					else
					{
						this._arrival_place = default(int);
					}
					this.SendPropertyChanged("tbl_Place1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_ScheduleDetails(tbl_ScheduleDetail entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Route = this;
		}
		
		private void detach_tbl_ScheduleDetails(tbl_ScheduleDetail entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Route = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Schedule")]
	public partial class tbl_Schedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_schedule;
		
		private double _price;
		
		private int _total_seat;
		
		private System.DateTime _date;
		
		private System.DateTime _arrival_date;
		
		private int _id_plane;
		
		private int _departure_origin;
		
		private int _arrival_origin;
		
		private EntitySet<tbl_ScheduleDetail> _tbl_ScheduleDetails;
		
		private EntitySet<tbl_BookingMaster> _tbl_BookingMasters;
		
		private EntityRef<tbl_Place> _tbl_Place;
		
		private EntityRef<tbl_Place> _tbl_Place1;
		
		private EntityRef<tbl_Plane> _tbl_Plane;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_scheduleChanging(string value);
    partial void Onid_scheduleChanged();
    partial void OnpriceChanging(double value);
    partial void OnpriceChanged();
    partial void Ontotal_seatChanging(int value);
    partial void Ontotal_seatChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void Onarrival_dateChanging(System.DateTime value);
    partial void Onarrival_dateChanged();
    partial void Onid_planeChanging(int value);
    partial void Onid_planeChanged();
    partial void Ondeparture_originChanging(int value);
    partial void Ondeparture_originChanged();
    partial void Onarrival_originChanging(int value);
    partial void Onarrival_originChanged();
    #endregion
		
		public tbl_Schedule()
		{
			this._tbl_ScheduleDetails = new EntitySet<tbl_ScheduleDetail>(new Action<tbl_ScheduleDetail>(this.attach_tbl_ScheduleDetails), new Action<tbl_ScheduleDetail>(this.detach_tbl_ScheduleDetails));
			this._tbl_BookingMasters = new EntitySet<tbl_BookingMaster>(new Action<tbl_BookingMaster>(this.attach_tbl_BookingMasters), new Action<tbl_BookingMaster>(this.detach_tbl_BookingMasters));
			this._tbl_Place = default(EntityRef<tbl_Place>);
			this._tbl_Place1 = default(EntityRef<tbl_Place>);
			this._tbl_Plane = default(EntityRef<tbl_Plane>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_schedule", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_schedule
		{
			get
			{
				return this._id_schedule;
			}
			set
			{
				if ((this._id_schedule != value))
				{
					this.Onid_scheduleChanging(value);
					this.SendPropertyChanging();
					this._id_schedule = value;
					this.SendPropertyChanged("id_schedule");
					this.Onid_scheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float NOT NULL")]
		public double price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_seat", DbType="Int NOT NULL")]
		public int total_seat
		{
			get
			{
				return this._total_seat;
			}
			set
			{
				if ((this._total_seat != value))
				{
					this.Ontotal_seatChanging(value);
					this.SendPropertyChanging();
					this._total_seat = value;
					this.SendPropertyChanged("total_seat");
					this.Ontotal_seatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_arrival_date", DbType="DateTime NOT NULL")]
		public System.DateTime arrival_date
		{
			get
			{
				return this._arrival_date;
			}
			set
			{
				if ((this._arrival_date != value))
				{
					this.Onarrival_dateChanging(value);
					this.SendPropertyChanging();
					this._arrival_date = value;
					this.SendPropertyChanged("arrival_date");
					this.Onarrival_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_plane", DbType="Int NOT NULL")]
		public int id_plane
		{
			get
			{
				return this._id_plane;
			}
			set
			{
				if ((this._id_plane != value))
				{
					if (this._tbl_Plane.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_planeChanging(value);
					this.SendPropertyChanging();
					this._id_plane = value;
					this.SendPropertyChanged("id_plane");
					this.Onid_planeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_departure_origin", DbType="Int NOT NULL")]
		public int departure_origin
		{
			get
			{
				return this._departure_origin;
			}
			set
			{
				if ((this._departure_origin != value))
				{
					if (this._tbl_Place.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondeparture_originChanging(value);
					this.SendPropertyChanging();
					this._departure_origin = value;
					this.SendPropertyChanged("departure_origin");
					this.Ondeparture_originChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_arrival_origin", DbType="Int NOT NULL")]
		public int arrival_origin
		{
			get
			{
				return this._arrival_origin;
			}
			set
			{
				if ((this._arrival_origin != value))
				{
					if (this._tbl_Place1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onarrival_originChanging(value);
					this.SendPropertyChanging();
					this._arrival_origin = value;
					this.SendPropertyChanged("arrival_origin");
					this.Onarrival_originChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Schedule_tbl_ScheduleDetail", Storage="_tbl_ScheduleDetails", ThisKey="id_schedule", OtherKey="id_schedule")]
		public EntitySet<tbl_ScheduleDetail> tbl_ScheduleDetails
		{
			get
			{
				return this._tbl_ScheduleDetails;
			}
			set
			{
				this._tbl_ScheduleDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Schedule_tbl_BookingMaster", Storage="_tbl_BookingMasters", ThisKey="id_schedule", OtherKey="id_schedule")]
		public EntitySet<tbl_BookingMaster> tbl_BookingMasters
		{
			get
			{
				return this._tbl_BookingMasters;
			}
			set
			{
				this._tbl_BookingMasters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Place_tbl_Schedule", Storage="_tbl_Place", ThisKey="departure_origin", OtherKey="id_place", IsForeignKey=true)]
		public tbl_Place tbl_Place
		{
			get
			{
				return this._tbl_Place.Entity;
			}
			set
			{
				tbl_Place previousValue = this._tbl_Place.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Place.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Place.Entity = null;
						previousValue.tbl_Schedules.Remove(this);
					}
					this._tbl_Place.Entity = value;
					if ((value != null))
					{
						value.tbl_Schedules.Add(this);
						this._departure_origin = value.id_place;
					}
					else
					{
						this._departure_origin = default(int);
					}
					this.SendPropertyChanged("tbl_Place");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Place_tbl_Schedule1", Storage="_tbl_Place1", ThisKey="arrival_origin", OtherKey="id_place", IsForeignKey=true)]
		public tbl_Place tbl_Place1
		{
			get
			{
				return this._tbl_Place1.Entity;
			}
			set
			{
				tbl_Place previousValue = this._tbl_Place1.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Place1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Place1.Entity = null;
						previousValue.tbl_Schedules1.Remove(this);
					}
					this._tbl_Place1.Entity = value;
					if ((value != null))
					{
						value.tbl_Schedules1.Add(this);
						this._arrival_origin = value.id_place;
					}
					else
					{
						this._arrival_origin = default(int);
					}
					this.SendPropertyChanged("tbl_Place1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Plane_tbl_Schedule", Storage="_tbl_Plane", ThisKey="id_plane", OtherKey="id_plane", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tbl_Plane tbl_Plane
		{
			get
			{
				return this._tbl_Plane.Entity;
			}
			set
			{
				tbl_Plane previousValue = this._tbl_Plane.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Plane.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Plane.Entity = null;
						previousValue.tbl_Schedules.Remove(this);
					}
					this._tbl_Plane.Entity = value;
					if ((value != null))
					{
						value.tbl_Schedules.Add(this);
						this._id_plane = value.id_plane;
					}
					else
					{
						this._id_plane = default(int);
					}
					this.SendPropertyChanged("tbl_Plane");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_ScheduleDetails(tbl_ScheduleDetail entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Schedule = this;
		}
		
		private void detach_tbl_ScheduleDetails(tbl_ScheduleDetail entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Schedule = null;
		}
		
		private void attach_tbl_BookingMasters(tbl_BookingMaster entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Schedule = this;
		}
		
		private void detach_tbl_BookingMasters(tbl_BookingMaster entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Schedule = null;
		}
	}
}
#pragma warning restore 1591
